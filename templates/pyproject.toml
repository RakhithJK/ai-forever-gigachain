[tool.poetry]
name = "templates"
version = "0.0.0"
description = ""
authors = []
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"


# dev, test, lint, typing
<<<<<<< HEAD
gigachain = ">=0.0.353,<0.2"
=======
langchain = ">=0.0.353,<0.2"
>>>>>>> langchan/master

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
poethepoet = "^0.24.1"
pytest-watch = "^4.2.0"
<<<<<<< HEAD
gigachain-cli = ">=0.0.21"
=======
langchain-cli = ">=0.0.21"
>>>>>>> langchan/master

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = "^7.4.3"

[tool.poetry.group.lint]
optional = true

[tool.poetry.group.lint.dependencies]
poethepoet = "^0.24.1"
ruff = "^0.1.3"
<<<<<<< HEAD
gigachain = { path = "../libs/langchain", develop = true }
gigachain-core = { path = "../libs/core", develop = true }
=======
langchain = { path = "../libs/langchain", develop = true }
langchain-core = { path = "../libs/core", develop = true }
>>>>>>> langchan/master

[tool.poetry.group.typing]
optional = true

[tool.poetry.group.typing.dependencies]

[tool.ruff.lint]
select = [
  "E",  # pycodestyle
  "F",  # pyflakes
  "I",  # isort
]

[tool.poe.tasks]
test = "poetry run pytest"
watch = "poetry run ptw"
lint = ["_lint", "_check_formatting"]
format = ["_lint_fix", "_format"]

<<<<<<< HEAD
_check_formatting = "poetry run ruff format . --check"
=======
_check_formatting = "poetry run ruff format . --diff"
>>>>>>> langchan/master
_lint = "poetry run ruff ."
_format = "poetry run ruff format ."
_lint_fix = "poetry run ruff . --fix"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
