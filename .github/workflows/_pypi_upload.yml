name: Publish Python distribution to PyPI

on:
  workflow_dispatch:
    inputs:
      distribProjectName:
        description: 'Name of distrib project in pypi'
        required: true
        type: string
        default: 'gigachain'
      distribProjectPath:
        description: 'Path to project in mono-repo'
        required: true
        type: string
        default: 'gigachain/'
      publish:
        description: 'Publish distrib to pypi'
        required: false
        type: boolean
        default: false
      gitHubRelease:
        description: 'Create GitHub Release'
        required: false
        type: boolean
        default: false

jobs:
  build:
    name: Build distribution
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.poetry/bin" >> $GITHUB_PATH
      - name: Build a binary wheel
        run: |
          cd ${{ inputs.distribProjectPath }}
          poetry build
          
      - name: Store the distribution packages
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.distribProjectName }}
          path: /home/runner/work/gigachain/gigachain/${{ inputs.distribProjectPath }}/dist/
  publish-to-pypi:
    if: ${{ inputs.publish }}
    needs:
      - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/${{ inputs.distribProjectName }}
    permissions:
      id-token: write

    steps:
      - name: Download the dist
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.distribProjectName }}
          path: dist/
      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}

  github-release:
    name: >-
      Upload distrib to GitHub Release
    if: ${{ inputs.gitHubRelease }}
    needs:
      - build
    runs-on: ubuntu-latest

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v3
        with:
          path: dist/
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release create
          '${{ github.ref_name }}'
          --repo '${{ github.repository }}'
          --notes ""
      - name: Upload artifact to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release upload
          '${{ github.ref_name }}' dist/**
          --repo '${{ github.repository }}'
